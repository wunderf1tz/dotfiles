# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
gaps inner 10
gaps outer 3
default_border pixel 5
hide_edge_borders none
smart_gaps on
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $mon1 eDP-1
set $mon2 DP-1 
set $mon3 HDMI-A-1
set $mon4 HDMI-A-2

# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
bindsym $mod+space exec rofi -show drun -show-icons -show-sidebar -icon-theme "Papirus" -font "Cozette_Vector 13"
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# 
#

#
# Settings for vertical alignment of external monitor
#
#output DP-1 resolution 2160x3840 transform 270 position 0,0
#output eDP-1 resolution 1920x1080 position 2160,0

# External monitor on left side
#output DP-1 resolution 3840x2160 position 0,0
#output eDP-1 resolution 1920x1080 position 3840,0
#output HDMI-A-1 resolution 1920x1080 position 5760,0
#output HDMI-A-2 resolution 1920x1080 position 5760,0


# External monitor on right side
output DP-1 resolution 3840x2160 position 1920,0
output eDP-1 resolution 1920x1080 position 0,0

output HDMI-A-1 resolution 1920x1080 position 1920,0
output HDMI-A-2 resolution 1920x1080 position 1920,0

#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {           
    xkb_layout de
    xkb_variant ,nodeadkeys
    xkb_options grp:alt_shift_toggle
}


### Key bindings
# Media keys
# Screen brightness controls
bindsym --locked XF86MonBrightnessUp exec light -S "$(light -G | awk '{ print int(($1 + .72) * 1.4) }')"
bindsym --locked XF86MonBrightnessDown exec light -S "$(light -G | awk '{ print int($1 / 1.4) }')"

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +2%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -2%
bindsym XF86AudioMute        exec pactl set-sink-mute @DEFAULT_SINK@ toggle

# Spotify control
#XF86AudioNext
#XF86AudioPrev

#set $sink pactl list short sinks | grep RUNNING | cut -f1
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $sink +10%
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $sink -10%
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $sink toggle
#bindsym XF86AudioRaiseVolume exec --no-startup-id 'pactl set-sink-volume 1 +5%' #increase sound volume
#bindsym XF86AudioLowerVolume exec --no-startup-id 'pamixer set-sink-volume 1 --decrease 5'
# Media player controls

bindsym XF86AudioPlay exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Play
bindsym XF86AudioPause exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Pause
bindsym XF86AudioNext exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
bindsym XF86AudioPrev exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous


#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.

    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
   # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Workspaces:
#
    # Workspace definitions
    workspace 1a output $mon1
    workspace 2a output $mon1
    workspace 3a output $mon1
    workspace 4a output $mon1
    workspace 5a output $mon1
    workspace 6a output $mon1
    workspace 7a output $mon1
    workspace 8a output $mon1
    workspace 9a output $mon1
    workspace 0a output $mon1

    workspace 1b output $mon2
    workspace 2b output $mon2
    workspace 3b output $mon2
    workspace 4b output $mon2
    workspace 5b output $mon2
    workspace 6b output $mon2
    workspace 7b output $mon2
    workspace 8b output $mon2
    workspace 9b output $mon2
    workspace 0b output $mon2

    workspace 1c output $mon3
    workspace 2c output $mon3
    workspace 3c output $mon3
    workspace 4c output $mon3
    workspace 5c output $mon3
    workspace 6c output $mon3
    workspace 7c output $mon3
    workspace 8c output $mon3
    workspace 9c output $mon3
    workspace 0c output $mon3

    # Changing workspaces
    bindsym $mod+1 workspace 1a
    bindsym $mod+2 workspace 2a
    bindsym $mod+3 workspace 3a
    bindsym $mod+4 workspace 4a
    bindsym $mod+5 workspace 5a
    bindsym $mod+6 workspace 6a
    bindsym $mod+7 workspace 7a
    bindsym $mod+8 workspace 8a
    bindsym $mod+9 workspace 9a
    bindsym $mod+0 workspace 0a

    bindsym $mod+Ctrl+1 workspace 1b
    bindsym $mod+Ctrl+2 workspace 2b
    bindsym $mod+Ctrl+3 workspace 3b
    bindsym $mod+Ctrl+4 workspace 4b
    bindsym $mod+Ctrl+5 workspace 5b
    bindsym $mod+Ctrl+6 workspace 6b
    bindsym $mod+Ctrl+7 workspace 7b
    bindsym $mod+Ctrl+8 workspace 8b
    bindsym $mod+Ctrl+9 workspace 9b
    bindsym $mod+Ctrl+0 workspace 0b

    bindsym $mod+Ctrl+period workspace 1c 


    # Moving containers to workspaces
    bindsym $mod+Shift+1 move container to workspace 1a
    bindsym $mod+Shift+2 move container to workspace 2a
    bindsym $mod+Shift+3 move container to workspace 3a
    bindsym $mod+Shift+4 move container to workspace 4a
    bindsym $mod+Shift+5 move container to workspace 5a
    bindsym $mod+Shift+6 move container to workspace 6a
    bindsym $mod+Shift+7 move container to workspace 7a
    bindsym $mod+Shift+8 move container to workspace 8a
    bindsym $mod+Shift+9 move container to workspace 9a
    bindsym $mod+Shift+0 move container to workspace 0a

    bindsym $mod+Shift+Ctrl+1 move container to workspace 1b
    bindsym $mod+Shift+Ctrl+2 move container to workspace 2b
    bindsym $mod+Shift+Ctrl+3 move container to workspace 3b
    bindsym $mod+Shift+Ctrl+4 move container to workspace 4b
    bindsym $mod+Shift+Ctrl+5 move container to workspace 5b
    bindsym $mod+Shift+Ctrl+6 move container to workspace 6b
    bindsym $mod+Shift+Ctrl+7 move container to workspace 7b
    bindsym $mod+Shift+Ctrl+8 move container to workspace 8b
    bindsym $mod+Shift+Ctrl+9 move container to workspace 9b
    bindsym $mod+Shift+Ctrl+0 move container to workspace 0b

    bindsym $mod+Shift+Ctrl+period move container to workspace 1c  

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
## Read `man 5 sway-bar` for more information about this section.
bar {

    swaybar_command waybar

   }
}

include /etc/sway/config.d/*

# Font, borders, and gaps
#
font Cozette_Vector 10.5

exec_always swaybar
exec pulseaudio --daemonize
exec mako 
exec_always $HOME/redshift/root/bin/gammastep
#
# Colours
#
client.background n/a #434c5e n/a
client.focused #434c5e #434c5e #eceff4 #434c5e #434c5e
client.focused_inactive #3b4252 #3b4252 #eceff4 #3b4252 #3b4252
client.unfocused #3b4252 #3b4252 #eceff4 #3b4252 #3b4252
client.urgent #434c5e #434c5e #eceff4 #434c5e #434c5e

bindsym $mod+n exec --no-startup-id alacritty -t nm_tui_win -e "nmtui"
bindsym $mod+Shift+d exec nautilus 
bindsym $mod+f exec firefox-wayland

#
## Start apps in Floating mode
#
# App ID can be fetched by going through swaymsg -t get_tree | grep "app_id"
#
for_window [title="nm_tui_win"] floating enable
for_window [title="(Fiji Is Just) ImageJ"] floating enable
for_window [class="fiji-Main"] floating enable
for_window [app_id="firefox-wayland"] floating enable
for_window [app_id="org.gnome.Nautilus"] floating enable
for_window [app_id="org.pwmt.zathura"] floating enable


#
# Libunput gestures
#
input 2:7:SynPS/2_Synaptics_TouchPad tap enabled
input 2:7:SynPS/2_Synaptics_TouchPad tap_button_map lrm

#
# Mako
#
#exec dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus
